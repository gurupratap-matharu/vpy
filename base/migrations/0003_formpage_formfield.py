# Generated by Django 5.1.6 on 2025-03-08 17:51

import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.forms.models
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0002_initial"),
        ("wagtailcore", "0094_alter_page_locale"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="FormPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "to_address",
                    models.CharField(
                        blank=True,
                        help_text="Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.",
                        max_length=255,
                        validators=[wagtail.contrib.forms.models.validate_to_address],
                        verbose_name="to address",
                    ),
                ),
                (
                    "from_address",
                    models.EmailField(
                        blank=True, max_length=255, verbose_name="from address"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="subject"
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("block_quote", 2),
                            ("document", 3),
                            ("embed_block", 4),
                            ("faq", 10),
                            ("further_reading", 17),
                            ("gallery", 21),
                            ("heading_block", 23),
                            ("image_block", 20),
                            ("link", 17),
                            ("nav_tab", 27),
                            ("paragraph_block", 28),
                        ],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.TextBlock", (), {}),
                            1: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "blank": True,
                                    "label": "e.g. Mary Berry",
                                    "required": False,
                                },
                            ),
                            2: (
                                "wagtail.blocks.StructBlock",
                                [[("text", 0), ("attribute_name", 1)]],
                                {},
                            ),
                            3: (
                                "wagtail.documents.blocks.DocumentChooserBlock",
                                (),
                                {"template": "blocks/document_block.html"},
                            ),
                            4: (
                                "wagtail.embeds.blocks.EmbedBlock",
                                (),
                                {
                                    "help_text": "Insert an embed URL e.g https://www.youtube.com/watch?v=SGJFWirQ3ks",
                                    "icon": "media",
                                    "template": "blocks/embed_block.html",
                                },
                            ),
                            5: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"default": "Frequently asked questions"},
                            ),
                            6: ("wagtail.blocks.CharBlock", (), {"required": True}),
                            7: ("wagtail.blocks.RichTextBlock", (), {"required": True}),
                            8: (
                                "wagtail.blocks.StructBlock",
                                [[("question", 6), ("answer", 7)]],
                                {},
                            ),
                            9: ("wagtail.blocks.ListBlock", (8,), {}),
                            10: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 5), ("item", 9)]],
                                {},
                            ),
                            11: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "help_text": "Leave blank to use page's listing title.",
                                    "required": False,
                                },
                            ),
                            12: ("wagtail.blocks.PageChooserBlock", (), {}),
                            13: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 11), ("page", 12)]],
                                {},
                            ),
                            14: ("wagtail.blocks.CharBlock", (), {}),
                            15: ("wagtail.blocks.URLBlock", (), {}),
                            16: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 14), ("link", 15)]],
                                {},
                            ),
                            17: (
                                "wagtail.blocks.StreamBlock",
                                [[("internal_link", 13), ("external_link", 16)]],
                                {},
                            ),
                            18: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"required": True},
                            ),
                            19: ("wagtail.blocks.CharBlock", (), {"required": False}),
                            20: (
                                "wagtail.blocks.StructBlock",
                                [[("image", 18), ("caption", 19), ("attribution", 19)]],
                                {},
                            ),
                            21: (
                                "wagtail.blocks.ListBlock",
                                (20,),
                                {"template": "blocks/gallery_block.html"},
                            ),
                            22: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "blank": True,
                                    "choices": [
                                        ("", "Select a header size"),
                                        ("h2", "H2"),
                                        ("h3", "H3"),
                                        ("h4", "H4"),
                                    ],
                                    "required": False,
                                },
                            ),
                            23: (
                                "wagtail.blocks.StructBlock",
                                [[("heading_text", 6), ("size", 22)]],
                                {},
                            ),
                            24: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "icon": "pilcrow",
                                    "required": True,
                                    "template": "blocks/paragraph_block.html",
                                },
                            ),
                            25: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 6), ("content", 24)]],
                                {},
                            ),
                            26: ("wagtail.blocks.ListBlock", (25,), {}),
                            27: (
                                "wagtail.blocks.StructBlock",
                                [[("title", 6), ("item", 26)]],
                                {},
                            ),
                            28: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "icon": "pilcrow",
                                    "template": "blocks/paragraph_block.html",
                                },
                            ),
                        },
                    ),
                ),
                ("thank_you_text", wagtail.fields.RichTextField(blank=True)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "formpage",
                "verbose_name_plural": "formpages",
            },
            bases=(
                wagtail.contrib.forms.models.FormMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="FormField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "clean_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Safe name of the form field, the label converted to ascii_snake_case",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="The label of the form field",
                        max_length=255,
                        verbose_name="label",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(default=True, verbose_name="required"),
                ),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.",
                        verbose_name="choices",
                    ),
                ),
                (
                    "default_value",
                    models.TextField(
                        blank=True,
                        help_text="Default value. Comma or new line separated values supported for checkboxes.",
                        verbose_name="default value",
                    ),
                ),
                (
                    "help_text",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="help text"
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("singleline", "Single line text"),
                            ("multiline", "Multi-line text"),
                            ("email", "Email"),
                            ("number", "Number"),
                            ("url", "URL"),
                            ("checkbox", "Checkbox"),
                            ("checkboxes", "Checkboxes"),
                            ("dropdown", "Drop down"),
                            ("multiselect", "Multiple select"),
                            ("radio", "Radio buttons"),
                            ("date", "Date"),
                            ("datetime", "Date/time"),
                            ("hidden", "Hidden field"),
                        ],
                        max_length=16,
                        verbose_name="field type",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_fields",
                        to="base.formpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
